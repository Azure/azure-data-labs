# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: "Blueprint:01-lab-data-analytics-syn"

on: 
  workflow_dispatch:

permissions:
  contents: read

env:
  variables_path: "./01-lab-data-analytics-syn/config-lab.yml"
  terraform_workingdir: "./01-lab-data-analytics-syn/infra/terraform"
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  USER_OBJECT_ID: ${{ secrets.USER_OBJECT_ID }}
  USER_TENANT_ID: ${{ secrets.USER_TENANT_ID }}
  USER_EMAIL: ${{ secrets.USER_EMAIL }}

defaults:
  run:
    shell: bash

jobs:
  # Create storage account
  create-storage-account:
    name: Create Storage Account for Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables
        with:
          variablesPath: ${{ env.variables_path }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        uses: ./.github/actions/create-resource-group

      - name: Create Storage Account
        uses: ./.github/actions/create-storage-account

      - name: Create Storage Container
        uses: ./.github/actions/create-storage-container

  # Deploy lab
  deploy-lab:
    name: Deploy Lab
    needs:
      - create-storage-account
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.terraform_workingdir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 'latest'

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables
        with:
          variablesPath: ${{ env.variables_path }}

      - name: Parse Terraform Environment Variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: | 
          # Parse Azure secret into Terraform variables
          $servicePrincipal = ($env:AZURE_CREDENTIALS | ConvertFrom-Json)
          $env:ARM_CLIENT_ID = $servicePrincipal.clientId
          $env:ARM_CLIENT_SECRET = $servicePrincipal.clientSecret
          $env:ARM_SUBSCRIPTION_ID = $servicePrincipal.subscriptionId
          $env:ARM_TENANT_ID = $servicePrincipal.tenantId
          echo "::add-mask::$env:ARM_CLIENT_ID"
          echo "::add-mask::$env:ARM_CLIENT_SECRET"
          echo "::add-mask::$env:ARM_SUBSCRIPTION_ID"
          echo "::add-mask::$env:ARM_TENANT_ID"
          # Save environment variable setup for subsequent steps
          Get-ChildItem -Path Env: -Recurse -Include ARM_*,TF_VAR_* | ForEach-Object {Write-Output "$($_.Name)=$($_.Value)"} >> $env:GITHUB_ENV
        shell: pwsh

      - name: Terraform Format
        uses: ./.github/actions/run-terraform-format

      - name: Terraform Init
        uses: ./.github/actions/run-terraform-init

      - name: Terraform Validate
        uses: ./.github/actions/run-terraform-validate

      - name: Terraform Plan
        run: terraform plan -var "location=${{ env.location }}" -var "prefix=${{ env.prefix }}" -var "postfix=${{ env.postfix }}" -var "aad_login={\"name\"=\"${{ env.USER_EMAIL }}\", \"object_id\"=\"${{ env.USER_OBJECT_ID }}\", \"tenant_id\"=\"${{ env.USER_TENANT_ID }}\"}"
        working-directory: ${{ env.terraform_workingdir }} 
        shell: bash

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "location=${{ env.location }}" -var "prefix=${{ env.prefix }}" -var "postfix=${{ env.postfix }}" -var "aad_login={\"name\"=\"${{ env.USER_EMAIL }}\", \"object_id\"=\"${{ env.USER_OBJECT_ID }}\", \"tenant_id\"=\"${{ env.USER_TENANT_ID }}\"}"
        working-directory: ${{ env.terraform_workingdir }} 
        shell: bash